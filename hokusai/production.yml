---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: volley-web
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: volley
        component: web
        layer: application
      name: volley-web
      namespace: default
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: "8080"
        - name: STATSD_HOST
          value: datadog
        - name: STATSD_PORT
          value: "8125"
        envFrom:
        - configMapRef:
            name: volley-environment
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/volley:production
        imagePullPolicy: Always
        name: volley-web
        ports:
        - containerPort: 8080
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: volley
    component: web
    layer: application
  name: volley-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
spec:
  ports:
  - port: 443
    protocol: TCP
    name: https
    targetPort: 8080
  - port: 80
    protocol: TCP
    name: http
    targetPort: 8080
  selector:
    app: volley
    component: web
    layer: application
  type: LoadBalancer
