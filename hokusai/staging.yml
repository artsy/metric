---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: volley-web
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: volley
        component: web
        layer: application
      name: volley-web
      namespace: default
    spec:
      containers:
        - name: volley-web
          env:
            - name: PORT
              value: '8080'
            - name: STATSD_HOST
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: STATSD_PORT
              value: '8125'
          envFrom:
            - configMapRef:
                name: volley-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/volley:staging
          imagePullPolicy: Always
          ports:
            - name: volley-http
              containerPort: 8080
          readinessProbe:
            httpGet:
              port: volley-http
              path: /health
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: '1'
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: volley
    component: web
    layer: application
  name: volley-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: 'arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard'
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: 'http'
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: '443'
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: 'true'
spec:
  ports:
    - port: 443
      protocol: TCP
      name: https
      targetPort: volley-http
    - port: 80
      protocol: TCP
      name: http
      targetPort: volley-http
  selector:
    app: volley
    component: web
    layer: application
  type: LoadBalancer
